2020-07-12 11:39:17.877 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@672872e1: startup date [Sun Jul 12 11:39:17 CST 2020]; root of context hierarchy
2020-07-12 11:39:18.170 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:39:18.248 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fbe88dc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:39:18.779 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:663 -The following profiles are active: dev
2020-07-12 11:39:18.826 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517d4a0d: startup date [Sun Jul 12 11:39:18 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@672872e1
2020-07-12 11:39:21.959 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:39:22.162 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:39:23.051 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 11:39:23.767 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 11:39:23.780 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 11:39:24.085 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 11:39:24.600 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=37544a70-f169-3340-bdd9-a2211d0df546
2020-07-12 11:39:24.678 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:39:25.568 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dfce8ac4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:39:25.802 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fbe88dc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:39:26.488 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-07-12 11:39:26.512 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8080"]
2020-07-12 11:39:26.541 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 11:39:26.544 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 11:39:26.560 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 11:39:27.068 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 11:39:27.068 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 8242 ms
2020-07-12 11:39:28.058 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 11:39:28.058 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 11:39:28.073 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@f8ac51e
2020-07-12 11:39:30.597 INFO [main]org.apache.catalina.core.StandardService.log:180 -Stopping service [Tomcat]
2020-07-12 11:39:30.690 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@31323039}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:39:30.706 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-12 11:39:30.706 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:40)
2020-07-12 11:39:30.722 WARN [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-12 11:39:30.722 WARN [main]o.s.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod:347 -Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-07-12 11:39:30.815 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@31323039}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 11:39:30 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517d4a0d
2020-07-12 11:39:30.846 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@31323039}]org.apache.catalina.loader.WebappClassLoaderBase.log:182 -Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1328)
	at org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(WebappClassLoaderBase.java:1062)
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:400)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:318)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:57)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:155)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getServer(RibbonLoadBalancerClient.java:144)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:76)
	at org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:42)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:104)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:130)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:658)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:112)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:123)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:115)
	at zipkin2.Call$Base.execute(Call.java:379)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
	at zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:39:30.846 WARN [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@31323039}]o.s.c.annotation.AnnotationConfigApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
2020-07-12 11:39:30.878 INFO [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport:101 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-12 11:40:00.104 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@32910148: startup date [Sun Jul 12 11:40:00 CST 2020]; root of context hierarchy
2020-07-12 11:40:00.398 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:40:00.461 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a1606e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:40:00.897 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:663 -The following profiles are active: dev
2020-07-12 11:40:00.944 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7862f56: startup date [Sun Jul 12 11:40:00 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@32910148
2020-07-12 11:40:02.602 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:40:02.630 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:40:02.946 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 11:40:03.227 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 11:40:03.242 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 11:40:03.461 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 11:40:03.898 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=37544a70-f169-3340-bdd9-a2211d0df546
2020-07-12 11:40:03.991 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:40:04.802 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$85466b22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:40:05.146 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a1606e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:40:05.750 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-07-12 11:40:05.770 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8080"]
2020-07-12 11:40:05.788 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 11:40:05.788 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 11:40:05.795 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 11:40:06.096 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 11:40:06.096 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5167 ms
2020-07-12 11:40:06.721 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 11:40:06.721 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 11:40:06.736 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@531cdbaa
2020-07-12 11:40:08.739 INFO [main]org.apache.catalina.core.StandardService.log:180 -Stopping service [Tomcat]
2020-07-12 11:40:08.750 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1ffa0001}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:40:08.751 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-12 11:40:08.752 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:40)
2020-07-12 11:40:08.757 WARN [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-12 11:40:08.758 WARN [main]o.s.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod:347 -Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-07-12 11:40:09.374 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1ffa0001}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 11:40:09 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7862f56
2020-07-12 11:40:09.374 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1ffa0001}]org.apache.catalina.loader.WebappClassLoaderBase.log:182 -Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1328)
	at org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(WebappClassLoaderBase.java:1062)
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:400)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:318)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:57)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:155)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getServer(RibbonLoadBalancerClient.java:144)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:76)
	at org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:42)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:104)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:130)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:658)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:112)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:123)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:115)
	at zipkin2.Call$Base.execute(Call.java:379)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
	at zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:40:09.374 WARN [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1ffa0001}]o.s.c.annotation.AnnotationConfigApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
2020-07-12 11:40:09.405 INFO [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport:101 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-12 11:42:53.498 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bedbc4d: startup date [Sun Jul 12 11:42:53 CST 2020]; root of context hierarchy
2020-07-12 11:42:53.914 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:42:53.979 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45fadfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:42:54.416 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:663 -The following profiles are active: dev
2020-07-12 11:42:54.462 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63dd899: startup date [Sun Jul 12 11:42:54 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bedbc4d
2020-07-12 11:42:56.225 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:42:56.256 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:42:56.568 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 11:42:56.863 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 11:42:56.875 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 11:42:57.132 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 11:42:57.568 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=37544a70-f169-3340-bdd9-a2211d0df546
2020-07-12 11:42:57.631 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:42:58.317 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29e0dce2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:42:58.520 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45fadfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:42:59.113 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-07-12 11:42:59.129 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8080"]
2020-07-12 11:42:59.144 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 11:42:59.144 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 11:42:59.144 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 11:42:59.409 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 11:42:59.409 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 4947 ms
2020-07-12 11:43:00.157 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 11:43:00.157 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 11:43:00.173 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@25d3e73b
2020-07-12 11:43:02.233 INFO [main]org.apache.catalina.core.StandardService.log:180 -Stopping service [Tomcat]
2020-07-12 11:43:02.249 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6f10bd42}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:43:02.249 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-12 11:43:02.249 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:40)
2020-07-12 11:43:02.265 WARN [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-12 11:43:02.265 WARN [main]o.s.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod:347 -Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-07-12 11:43:02.896 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6f10bd42}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 11:43:02 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63dd899
2020-07-12 11:43:02.905 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6f10bd42}]org.apache.catalina.loader.WebappClassLoaderBase.log:182 -Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1328)
	at org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(WebappClassLoaderBase.java:1062)
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:400)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:318)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:57)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:155)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getServer(RibbonLoadBalancerClient.java:144)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:76)
	at org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:42)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:104)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:130)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:658)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:112)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:123)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:115)
	at zipkin2.Call$Base.execute(Call.java:379)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
	at zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:43:02.907 WARN [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6f10bd42}]o.s.c.annotation.AnnotationConfigApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
2020-07-12 11:43:02.937 INFO [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport:101 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-12 11:51:19.263 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6236eb5f: startup date [Sun Jul 12 11:51:19 CST 2020]; root of context hierarchy
2020-07-12 11:51:19.690 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:51:19.783 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f9e460be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:51:25.073 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:663 -The following profiles are active: dev
2020-07-12 11:51:25.183 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31bcf236: startup date [Sun Jul 12 11:51:25 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6236eb5f
2020-07-12 11:51:31.305 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:51:31.476 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:51:31.944 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 11:51:32.397 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 11:51:32.428 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 11:51:32.818 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 11:51:33.442 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=37544a70-f169-3340-bdd9-a2211d0df546
2020-07-12 11:51:33.520 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:51:34.206 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ddca5dc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:51:34.409 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f9e460be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:51:35.051 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-07-12 11:51:35.066 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8080"]
2020-07-12 11:51:35.098 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 11:51:35.098 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 11:51:35.113 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 11:51:35.425 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 11:51:35.425 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 10242 ms
2020-07-12 11:51:36.159 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 11:51:36.174 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 11:51:36.190 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7f723373
2020-07-12 11:51:38.140 INFO [main]org.apache.catalina.core.StandardService.log:180 -Stopping service [Tomcat]
2020-07-12 11:51:38.156 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@154e9d6b}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:51:38.156 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-12 11:51:38.156 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:40)
2020-07-12 11:51:38.156 WARN [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-12 11:51:38.156 WARN [main]o.s.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod:347 -Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-07-12 11:51:38.855 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@154e9d6b}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 11:51:38 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31bcf236
2020-07-12 11:51:38.861 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@154e9d6b}]org.apache.catalina.loader.WebappClassLoaderBase.log:182 -Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1328)
	at org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(WebappClassLoaderBase.java:1062)
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:400)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:318)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:57)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:155)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getServer(RibbonLoadBalancerClient.java:144)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:76)
	at org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:42)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:104)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:130)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:658)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:112)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:123)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:115)
	at zipkin2.Call$Base.execute(Call.java:379)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
	at zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:51:38.863 WARN [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@154e9d6b}]o.s.c.annotation.AnnotationConfigApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
2020-07-12 11:51:38.893 INFO [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport:101 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-12 11:53:44.561 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1329eff: startup date [Sun Jul 12 11:53:44 CST 2020]; root of context hierarchy
2020-07-12 11:53:44.902 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:53:44.981 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d5df90db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:53:45.444 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:663 -The following profiles are active: dev
2020-07-12 11:53:45.475 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a448449: startup date [Sun Jul 12 11:53:45 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1329eff
2020-07-12 11:53:47.255 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:53:47.286 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:53:47.763 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 11:53:48.065 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 11:53:48.081 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 11:53:48.299 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 11:53:48.721 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=37544a70-f169-3340-bdd9-a2211d0df546
2020-07-12 11:53:48.799 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:53:49.672 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b9c58dde] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:53:49.941 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d5df90db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:53:50.540 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-07-12 11:53:50.560 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8080"]
2020-07-12 11:53:50.578 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 11:53:50.578 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 11:53:50.586 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 11:53:50.876 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 11:53:50.877 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5402 ms
2020-07-12 11:53:51.549 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 11:53:51.549 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 11:53:51.565 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@43b3ad79
2020-07-12 11:53:53.602 INFO [main]org.apache.catalina.core.StandardService.log:180 -Stopping service [Tomcat]
2020-07-12 11:53:53.613 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc3cfd5}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:53:53.614 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-12 11:53:53.615 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:40)
2020-07-12 11:53:53.619 WARN [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-12 11:53:53.621 WARN [main]o.s.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod:347 -Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-07-12 11:53:54.191 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc3cfd5}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 11:53:54 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a448449
2020-07-12 11:53:54.191 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc3cfd5}]org.apache.catalina.loader.WebappClassLoaderBase.log:182 -Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1328)
	at org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(WebappClassLoaderBase.java:1062)
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:400)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:318)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:57)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:155)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getServer(RibbonLoadBalancerClient.java:144)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:76)
	at org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:42)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:104)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:130)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:658)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:112)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:123)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:115)
	at zipkin2.Call$Base.execute(Call.java:379)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
	at zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:53:54.191 WARN [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5cc3cfd5}]o.s.c.annotation.AnnotationConfigApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
2020-07-12 11:53:54.223 INFO [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport:101 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-12 11:56:09.094 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5552768b: startup date [Sun Jul 12 11:56:09 CST 2020]; root of context hierarchy
2020-07-12 11:56:09.749 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:56:09.843 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3ef88ac7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:56:10.373 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:663 -The following profiles are active: dev
2020-07-12 11:56:10.420 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63798ca7: startup date [Sun Jul 12 11:56:10 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5552768b
2020-07-12 11:56:12.973 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:56:13.019 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:56:13.394 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 11:56:13.877 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 11:56:13.909 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 11:56:14.283 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 11:56:15.125 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=37544a70-f169-3340-bdd9-a2211d0df546
2020-07-12 11:56:15.203 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:56:16.431 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$22de87ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:56:16.830 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3ef88ac7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:56:17.808 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-07-12 11:56:17.838 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8080"]
2020-07-12 11:56:17.869 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 11:56:17.869 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 11:56:17.878 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 11:56:18.255 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 11:56:18.256 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 7836 ms
2020-07-12 11:56:19.246 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 11:56:19.246 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 11:56:19.262 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@23739718
2020-07-12 11:56:21.602 INFO [main]org.apache.catalina.core.StandardService.log:180 -Stopping service [Tomcat]
2020-07-12 11:56:21.633 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@469a46ce}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:56:21.633 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-12 11:56:21.633 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
2020-07-12 11:56:21.633 WARN [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-12 11:56:21.633 WARN [main]o.s.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod:347 -Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-07-12 11:56:21.997 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@469a46ce}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 11:56:21 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63798ca7
2020-07-12 11:56:22.012 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@469a46ce}]org.apache.catalina.loader.WebappClassLoaderBase.log:182 -Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1328)
	at org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(WebappClassLoaderBase.java:1062)
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:400)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:318)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:57)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:155)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getServer(RibbonLoadBalancerClient.java:144)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:76)
	at org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:42)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:104)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:130)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:658)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:112)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:123)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:115)
	at zipkin2.Call$Base.execute(Call.java:379)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
	at zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:56:22.012 WARN [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@469a46ce}]o.s.c.annotation.AnnotationConfigApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
2020-07-12 11:56:22.028 INFO [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport:101 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-12 11:57:50.348 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@672872e1: startup date [Sun Jul 12 11:57:50 CST 2020]; root of context hierarchy
2020-07-12 11:57:50.781 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:57:50.849 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fbe88dc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:57:51.256 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:663 -The following profiles are active: dev
2020-07-12 11:57:51.303 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517d4a0d: startup date [Sun Jul 12 11:57:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@672872e1
2020-07-12 11:57:52.863 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:57:52.894 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:57:53.222 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 11:57:53.503 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 11:57:53.529 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 11:57:53.787 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 11:57:54.206 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=37544a70-f169-3340-bdd9-a2211d0df546
2020-07-12 11:57:54.315 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:57:54.986 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dfce8ac4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:57:55.189 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fbe88dc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:57:55.852 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-07-12 11:57:55.883 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8080"]
2020-07-12 11:57:55.899 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 11:57:55.899 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 11:57:55.914 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 11:57:56.257 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 11:57:56.257 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 4954 ms
2020-07-12 11:57:56.913 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 11:57:56.914 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 11:57:56.927 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@8596910
2020-07-12 11:57:58.891 INFO [main]org.apache.catalina.core.StandardService.log:180 -Stopping service [Tomcat]
2020-07-12 11:57:58.907 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4420a2f8}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:57:58.907 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-12 11:57:58.907 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:40)
2020-07-12 11:57:58.922 WARN [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-12 11:57:58.922 WARN [main]o.s.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod:347 -Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-07-12 11:57:59.536 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4420a2f8}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 11:57:59 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@517d4a0d
2020-07-12 11:57:59.542 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4420a2f8}]org.apache.catalina.loader.WebappClassLoaderBase.log:182 -Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1328)
	at org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(WebappClassLoaderBase.java:1062)
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:400)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:318)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:57)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:155)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getServer(RibbonLoadBalancerClient.java:144)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:76)
	at org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:42)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:104)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:130)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:658)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:112)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:123)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:115)
	at zipkin2.Call$Base.execute(Call.java:379)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
	at zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:57:59.544 WARN [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4420a2f8}]o.s.c.annotation.AnnotationConfigApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
2020-07-12 11:57:59.571 INFO [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport:101 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-12 11:58:58.444 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1de76cc7: startup date [Sun Jul 12 11:58:58 CST 2020]; root of context hierarchy
2020-07-12 11:58:58.756 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:58:58.819 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1600a5d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:58:59.162 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:659 -No active profile set, falling back to default profiles: default
2020-07-12 11:58:59.209 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2250b9f2: startup date [Sun Jul 12 11:58:59 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1de76cc7
2020-07-12 11:59:00.930 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:59:00.946 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:59:01.242 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 11:59:01.538 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 11:59:01.554 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 11:59:01.772 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 11:59:02.194 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=37544a70-f169-3340-bdd9-a2211d0df546
2020-07-12 11:59:02.256 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:59:02.992 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f9e6a2d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:59:03.210 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1600a5d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:59:03.803 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-07-12 11:59:03.818 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8080"]
2020-07-12 11:59:03.834 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 11:59:03.834 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 11:59:03.850 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 11:59:04.115 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 11:59:04.115 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 4906 ms
2020-07-12 11:59:04.871 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 11:59:04.871 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 11:59:04.887 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@19cfd562
2020-07-12 11:59:06.913 INFO [main]org.apache.catalina.core.StandardService.log:180 -Stopping service [Tomcat]
2020-07-12 11:59:06.929 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@61851574}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:59:06.929 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-12 11:59:06.929 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:40)
2020-07-12 11:59:06.929 WARN [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-12 11:59:06.944 WARN [main]o.s.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod:347 -Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-07-12 11:59:07.568 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@61851574}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 11:59:07 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2250b9f2
2020-07-12 11:59:07.568 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@61851574}]org.apache.catalina.loader.WebappClassLoaderBase.log:182 -Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1328)
	at org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(WebappClassLoaderBase.java:1062)
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:400)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:318)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:57)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:155)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getServer(RibbonLoadBalancerClient.java:144)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:76)
	at org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:42)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:104)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:130)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:658)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:112)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:123)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:115)
	at zipkin2.Call$Base.execute(Call.java:379)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
	at zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:59:07.568 WARN [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@61851574}]o.s.c.annotation.AnnotationConfigApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
2020-07-12 11:59:07.600 INFO [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport:101 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-12 11:59:40.353 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@140c9f39: startup date [Sun Jul 12 11:59:40 CST 2020]; root of context hierarchy
2020-07-12 11:59:40.649 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:59:40.696 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4eab32e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:59:41.039 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:659 -No active profile set, falling back to default profiles: default
2020-07-12 11:59:41.086 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45312be2: startup date [Sun Jul 12 11:59:41 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@140c9f39
2020-07-12 11:59:42.768 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:59:42.799 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 11:59:43.096 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 11:59:43.423 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 11:59:43.439 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 11:59:43.673 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 11:59:44.110 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=37544a70-f169-3340-bdd9-a2211d0df546
2020-07-12 11:59:44.172 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 11:59:44.871 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32912fe6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:59:45.083 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4eab32e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 11:59:45.777 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-07-12 11:59:45.808 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8080"]
2020-07-12 11:59:45.824 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 11:59:45.824 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 11:59:45.824 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 11:59:46.089 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 11:59:46.089 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5003 ms
2020-07-12 11:59:46.792 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 11:59:46.792 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 11:59:46.808 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4b385f1e
2020-07-12 11:59:48.811 INFO [main]org.apache.catalina.core.StandardService.log:180 -Stopping service [Tomcat]
2020-07-12 11:59:48.827 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a935c5c}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 zipkin2.reporter.ByteBoundedQueue.drainTo(ByteBoundedQueue.java:81)
 zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:257)
 zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:59:48.827 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-12 11:59:48.827 WARN [localhost-startStop-1]org.apache.catalina.loader.WebappClassLoaderBase.log:180 -The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:40)
2020-07-12 11:59:48.827 WARN [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-12 11:59:48.827 WARN [main]o.s.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod:347 -Invocation of destroy method 'close' failed on bean with name 'eurekaRegistration': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-07-12 11:59:49.529 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a935c5c}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 11:59:49 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45312be2
2020-07-12 11:59:49.544 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a935c5c}]org.apache.catalina.loader.WebappClassLoaderBase.log:182 -Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1328)
	at org.apache.catalina.loader.WebappClassLoaderBase.getResourceAsStream(WebappClassLoaderBase.java:1062)
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:400)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:318)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:316)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108)
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:57)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:155)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getServer(RibbonLoadBalancerClient.java:144)
	at org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:76)
	at org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:42)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:104)
	at org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:130)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:658)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:112)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:123)
	at org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:115)
	at zipkin2.Call$Base.execute(Call.java:379)
	at zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
	at zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
2020-07-12 11:59:49.544 WARN [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@1a935c5c}]o.s.c.annotation.AnnotationConfigApplicationContext.refresh:558 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [org.springframework.cloud.netflix.ribbon.eureka.EurekaRibbonClientConfiguration]; nested exception is java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org/springframework/cloud/netflix/ribbon/eureka/EurekaRibbonClientConfiguration.class]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
2020-07-12 11:59:49.576 INFO [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logAutoConfigurationReport:101 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-12 12:04:05.209 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7690781: startup date [Sun Jul 12 12:04:05 CST 2020]; root of context hierarchy
2020-07-12 12:04:05.693 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:04:05.802 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$783a37c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:04:06.566 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:659 -No active profile set, falling back to default profiles: default
2020-07-12 12:04:06.644 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66fdec9: startup date [Sun Jul 12 12:04:06 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7690781
2020-07-12 12:04:08.513 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 12:04:08.542 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 12:04:08.914 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 12:04:09.646 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 12:04:09.661 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 12:04:09.942 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 12:04:10.457 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=5c6d9c20-596b-3b8d-ae0c-498b349134ab
2020-07-12 12:04:10.519 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:04:11.534 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5c2034cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:04:11.878 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$783a37c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:04:12.669 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8900 (http)
2020-07-12 12:04:12.700 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8900"]
2020-07-12 12:04:12.716 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 12:04:12.716 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 12:04:12.716 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 12:04:12.997 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 12:04:12.997 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 6353 ms
2020-07-12 12:04:13.734 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 12:04:13.734 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 12:04:13.750 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2b3cc984
2020-07-12 12:04:16.968 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:175 -no modules loaded
2020-07-12 12:04:16.984 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.index.reindex.ReindexPlugin]
2020-07-12 12:04:16.984 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.join.ParentJoinPlugin]
2020-07-12 12:04:16.984 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.percolator.PercolatorPlugin]
2020-07-12 12:04:16.984 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.script.mustache.MustachePlugin]
2020-07-12 12:04:16.984 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.transport.Netty3Plugin]
2020-07-12 12:04:16.984 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.transport.Netty4Plugin]
2020-07-12 12:04:20.354 INFO [localhost-startStop-1]io.netty.util.internal.PlatformDependent.info:104 -Your platform does not provide complete low-level API for accessing direct buffers reliably. Unless explicitly requested, heap buffer will always be preferred to avoid potential system instability.
2020-07-12 12:04:24.013 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-07-12 12:04:24.013 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'tracingFilter' to: [/*]
2020-07-12 12:04:24.013 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'exceptionLoggingFilter' to: [/*]
2020-07-12 12:04:24.013 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-07-12 12:04:24.013 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-07-12 12:04:24.013 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'requestContextFilter' to: [/*]
2020-07-12 12:04:24.028 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'httpTraceFilter' to: [/*]
2020-07-12 12:04:24.028 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-07-12 12:04:24.028 INFO [localhost-startStop-1]o.s.boot.web.servlet.ServletRegistrationBean.addRegistration:186 -Servlet dispatcherServlet mapped to [/]
2020-07-12 12:04:24.028 INFO [localhost-startStop-1]o.s.boot.web.servlet.ServletRegistrationBean.addRegistration:186 -Servlet zuulServlet mapped to [/zuul/*]
2020-07-12 12:04:26.540 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing FeignContext-producer-server: startup date [Sun Jul 12 12:04:26 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66fdec9
2020-07-12 12:04:26.570 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:04:28.110 INFO [main]o.s.cloud.netflix.eureka.InstanceInfoFactory.create:71 -Setting initial instance status as: STARTING
2020-07-12 12:04:30.642 INFO [main]com.netflix.discovery.DiscoveryClient.<init>:349 -Initializing Eureka in region us-east-1
2020-07-12 12:04:31.297 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70 -Using JSON encoding codec LegacyJacksonJson
2020-07-12 12:04:31.297 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71 -Using JSON decoding codec LegacyJacksonJson
2020-07-12 12:04:31.836 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80 -Using XML encoding codec XStreamXml
2020-07-12 12:04:31.836 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81 -Using XML decoding codec XStreamXml
2020-07-12 12:04:32.320 INFO [main]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:04:33.747 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:958 -Disable delta property : false
2020-07-12 12:04:33.747 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:959 -Single vip registry refresh property : null
2020-07-12 12:04:33.747 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:960 -Force full registry fetch : false
2020-07-12 12:04:33.747 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:961 -Application is null : false
2020-07-12 12:04:33.747 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:962 -Registered Applications size is zero : true
2020-07-12 12:04:33.747 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:964 -Application version is -1: true
2020-07-12 12:04:33.747 INFO [main]com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1047 -Getting all instance registry info from the eureka server
2020-07-12 12:04:33.996 INFO [main]com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1056 -The response status is 200
2020-07-12 12:04:33.996 INFO [main]com.netflix.discovery.DiscoveryClient.initScheduledTasks:1264 -Starting heartbeat executor: renew interval is: 30
2020-07-12 12:04:34.012 INFO [main]com.netflix.discovery.InstanceInfoReplicator.<init>:60 -InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-12 12:04:34.012 INFO [main]com.netflix.discovery.DiscoveryClient.<init>:449 -Discovery Client initialized at timestamp 1594526674012 with initial instances count: 2
2020-07-12 12:04:40.879 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/userinfo.do]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.userinfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/sendMessage.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.sendMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/addRecord.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.addRecord(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/userLogin.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.userLogin(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/modpassword.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.modpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/yzmLogin.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.modpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/wjpassword.do]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.wjpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/checkTel.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.checkTel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/looktelyzm.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.looktelyzm(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/getPicCheckCode.do],methods=[GET]}" onto public void com.gcx.control.InformationController.getPicCheckCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/order/{id}],methods=[GET]}" onto public java.lang.String com.gcx.control.ordercontrol.order(long,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/hello/{name}]}" onto public java.lang.String com.gcx.control.ordercontrol.index(java.lang.String)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/getPicCheckCode]}" onto public void com.gcx.control.ordercontrol.getPicCheckCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:04:40.895 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-07-12 12:04:40.910 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-07-12 12:04:40.910 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-07-12 12:04:40.910 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-07-12 12:04:40.910 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:04:41.176 INFO [main]o.s.boot.actuate.endpoint.web.EndpointLinksResolver.<init>:59 -Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-12 12:04:41.191 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-07-12 12:04:41.207 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-07-12 12:04:41.207 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:04:42.197 INFO [main]s.d.s.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods:69 -Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-12 12:04:42.515 WARN [main]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 12:04:42.515 INFO [main]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 12:04:42.717 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:04:43.482 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache:574 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66fdec9: startup date [Sun Jul 12 12:04:06 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7690781
2020-07-12 12:04:43.622 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:04:43.622 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:04:43.856 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-07-12 12:04:43.856 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-07-12 12:04:43.856 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-07-12 12:04:43.856 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache:83 -Clear EntityHelper entityTableMap cache.
2020-07-12 12:04:46.861 INFO [main]o.s.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized:65 -Starting filter initializer
2020-07-12 12:04:47.142 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated:433 -Registering beans for JMX exposure on startup
2020-07-12 12:04:47.142 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'dataSource' has been autodetected for JMX exposure
2020-07-12 12:04:47.158 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-07-12 12:04:47.173 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-07-12 12:04:47.173 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-07-12 12:04:47.173 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-07-12 12:04:47.205 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-07-12 12:04:47.220 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=66fdec9,type=ConfigurationPropertiesRebinder]
2020-07-12 12:04:47.236 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:668 -Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-07-12 12:04:47.267 INFO [main]o.s.context.support.DefaultLifecycleProcessor.start:351 -Starting beans in phase 0
2020-07-12 12:04:47.267 INFO [main]o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.register:42 -Registering application consumer-server with eureka with status UP
2020-07-12 12:04:47.267 INFO [main]com.netflix.discovery.DiscoveryClient.notify:1299 -Saw local status change event StatusChangeEvent [timestamp=1594526687267, current=UP, previous=STARTING]
2020-07-12 12:04:47.267 INFO [main]o.s.context.support.DefaultLifecycleProcessor.start:351 -Starting beans in phase 2147483647
2020-07-12 12:04:47.267 INFO [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:160 -Context refreshed
2020-07-12 12:04:47.283 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:826 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900: registering service...
2020-07-12 12:04:47.329 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:835 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900 - registration status: 204
2020-07-12 12:04:47.361 INFO [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:163 -Found 1 custom documentation plugin(s)
2020-07-12 12:04:47.423 INFO [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:41 -Scanning for api listing references
2020-07-12 12:04:47.899 INFO [main]s.d.s.w.readers.operation.CachingOperationNameGenerator.startingWith:40 -Generating unique operation named: modpasswordUsingGET_1
2020-07-12 12:04:47.944 INFO [main]s.d.s.w.readers.operation.CachingOperationNameGenerator.startingWith:40 -Generating unique operation named: getPicCheckCodeUsingGET_1
2020-07-12 12:04:48.037 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Starting ProtocolHandler ["http-nio-8900"]
2020-07-12 12:04:48.037 INFO [main]org.apache.tomcat.util.net.NioSelectorPool.log:180 -Using a shared selector for servlet write/read
2020-07-12 12:04:48.131 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:206 -Tomcat started on port(s): 8900 (http) with context path ''
2020-07-12 12:04:48.131 INFO [main]o.s.c.n.e.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:124 -Updating port to 8900
2020-07-12 12:04:48.131 INFO [main]com.gcx.ConsumerServerApplication.logStarted:59 -Started ConsumerServerApplication in 46.629 seconds (JVM running for 49.249)
2020-07-12 12:04:48.585 INFO [RMI TCP Connection(10)-192.168.1.7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-07-12 12:04:48.585 INFO [RMI TCP Connection(10)-192.168.1.7]org.springframework.web.servlet.DispatcherServlet.initServletBean:494 -FrameworkServlet 'dispatcherServlet': initialization started
2020-07-12 12:04:48.632 INFO [RMI TCP Connection(10)-192.168.1.7]org.springframework.web.servlet.DispatcherServlet.initServletBean:509 -FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2020-07-12 12:04:48.788 INFO [RMI TCP Connection(9)-192.168.1.7]com.zaxxer.hikari.HikariDataSource.getConnection:110 -HikariPool-1 - Starting...
2020-07-12 12:04:50.334 INFO [RMI TCP Connection(9)-192.168.1.7]com.zaxxer.hikari.HikariDataSource.getConnection:123 -HikariPool-1 - Start completed.
2020-07-12 12:04:50.806 INFO [RMI TCP Connection(9)-192.168.1.7]io.lettuce.core.EpollProvider.info:104 -Starting without optional epoll library
2020-07-12 12:04:50.816 INFO [RMI TCP Connection(9)-192.168.1.7]io.lettuce.core.KqueueProvider.info:104 -Starting without optional kqueue library
2020-07-12 12:09:33.774 INFO [AsyncResolver-bootstrap-executor-0]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:12:13.619 INFO [http-nio-8900-exec-1]o.s.cloud.netflix.zuul.web.ZuulHandlerMapping.registerHandler:373 -Mapped URL path [/consumer-server/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2020-07-12 12:12:13.620 INFO [http-nio-8900-exec-1]o.s.cloud.netflix.zuul.web.ZuulHandlerMapping.registerHandler:373 -Mapped URL path [/uuzl/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2020-07-12 12:12:13.620 INFO [http-nio-8900-exec-1]o.s.cloud.netflix.zuul.web.ZuulHandlerMapping.registerHandler:373 -Mapped URL path [/producer-server/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2020-07-12 12:12:13.683 INFO [http-nio-8900-exec-1]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-consumer-server: startup date [Sun Jul 12 12:12:13 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66fdec9
2020-07-12 12:12:13.787 INFO [http-nio-8900-exec-1]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:12:14.176 INFO [http-nio-8900-exec-1]com.netflix.config.ChainedDynamicProperty.checkAndFlip:115 -Flipping property: consumer-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-12 12:12:14.215 INFO [http-nio-8900-exec-1]com.netflix.util.concurrent.ShutdownEnabledTimer.<init>:58 -Shutdown hook installed for: NFLoadBalancer-PingTimer-consumer-server
2020-07-12 12:12:14.222 INFO [http-nio-8900-exec-1]com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig:192 -Client: consumer-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-12 12:12:14.246 INFO [http-nio-8900-exec-1]com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature:222 -Using serverListUpdater PollingServerListUpdater
2020-07-12 12:12:14.270 INFO [http-nio-8900-exec-1]com.netflix.config.ChainedDynamicProperty.checkAndFlip:115 -Flipping property: consumer-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-12 12:12:14.274 INFO [http-nio-8900-exec-1]com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit:150 -DynamicServerListLoadBalancer for client consumer-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-server,current list of Servers=[MS-UFIYVLDHDZMG:8900],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MS-UFIYVLDHDZMG:8900;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1bacd774
2020-07-12 12:12:15.252 INFO [PollingServerListUpdater-0]com.netflix.config.ChainedDynamicProperty.checkAndFlip:115 -Flipping property: consumer-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-12 12:14:33.780 INFO [AsyncResolver-bootstrap-executor-0]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:15:18.486 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@435fb7b5: startup date [Sun Jul 12 12:15:18 CST 2020]; root of context hierarchy
2020-07-12 12:15:19.418 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:15:19.512 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$696d7440] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:15:20.370 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:659 -No active profile set, falling back to default profiles: default
2020-07-12 12:15:20.448 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@614aeccc: startup date [Sun Jul 12 12:15:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@435fb7b5
2020-07-12 12:15:22.803 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 12:15:22.849 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 12:15:23.333 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 12:15:23.962 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 12:15:23.977 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 12:15:24.320 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 12:15:25.147 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=5c6d9c20-596b-3b8d-ae0c-498b349134ab
2020-07-12 12:15:25.225 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:15:25.881 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4d537143] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:15:26.131 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$696d7440] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:15:27.192 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8900 (http)
2020-07-12 12:15:27.239 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8900"]
2020-07-12 12:15:27.270 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 12:15:27.270 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 12:15:27.286 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 12:15:27.942 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 12:15:27.942 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 7494 ms
2020-07-12 12:15:28.807 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 12:15:28.807 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 12:15:28.823 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@103817f5
2020-07-12 12:15:32.360 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:175 -no modules loaded
2020-07-12 12:15:32.360 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.index.reindex.ReindexPlugin]
2020-07-12 12:15:32.360 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.join.ParentJoinPlugin]
2020-07-12 12:15:32.360 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.percolator.PercolatorPlugin]
2020-07-12 12:15:32.360 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.script.mustache.MustachePlugin]
2020-07-12 12:15:32.360 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.transport.Netty3Plugin]
2020-07-12 12:15:32.360 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.transport.Netty4Plugin]
2020-07-12 12:15:35.030 INFO [localhost-startStop-1]io.netty.util.internal.PlatformDependent.info:104 -Your platform does not provide complete low-level API for accessing direct buffers reliably. Unless explicitly requested, heap buffer will always be preferred to avoid potential system instability.
2020-07-12 12:15:38.899 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-07-12 12:15:38.900 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'tracingFilter' to: [/*]
2020-07-12 12:15:38.900 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'exceptionLoggingFilter' to: [/*]
2020-07-12 12:15:38.901 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-07-12 12:15:38.901 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-07-12 12:15:38.902 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'requestContextFilter' to: [/*]
2020-07-12 12:15:38.902 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'httpTraceFilter' to: [/*]
2020-07-12 12:15:38.902 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-07-12 12:15:38.903 INFO [localhost-startStop-1]o.s.boot.web.servlet.ServletRegistrationBean.addRegistration:186 -Servlet dispatcherServlet mapped to [/]
2020-07-12 12:15:38.905 INFO [localhost-startStop-1]o.s.boot.web.servlet.ServletRegistrationBean.addRegistration:186 -Servlet zuulServlet mapped to [/zuul/*]
2020-07-12 12:15:41.610 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing FeignContext-producer-server: startup date [Sun Jul 12 12:15:41 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@614aeccc
2020-07-12 12:15:41.652 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:15:42.450 INFO [main]o.s.cloud.netflix.eureka.InstanceInfoFactory.create:71 -Setting initial instance status as: STARTING
2020-07-12 12:15:42.528 INFO [main]com.netflix.discovery.DiscoveryClient.<init>:349 -Initializing Eureka in region us-east-1
2020-07-12 12:15:43.012 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70 -Using JSON encoding codec LegacyJacksonJson
2020-07-12 12:15:43.012 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71 -Using JSON decoding codec LegacyJacksonJson
2020-07-12 12:15:43.262 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80 -Using XML encoding codec XStreamXml
2020-07-12 12:15:43.262 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81 -Using XML decoding codec XStreamXml
2020-07-12 12:15:43.731 INFO [main]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:15:43.840 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:958 -Disable delta property : false
2020-07-12 12:15:43.840 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:959 -Single vip registry refresh property : null
2020-07-12 12:15:43.840 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:960 -Force full registry fetch : false
2020-07-12 12:15:43.840 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:961 -Application is null : false
2020-07-12 12:15:43.840 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:962 -Registered Applications size is zero : true
2020-07-12 12:15:43.840 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:964 -Application version is -1: true
2020-07-12 12:15:43.840 INFO [main]com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1047 -Getting all instance registry info from the eureka server
2020-07-12 12:15:44.190 INFO [main]com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1056 -The response status is 200
2020-07-12 12:15:44.190 INFO [main]com.netflix.discovery.DiscoveryClient.initScheduledTasks:1264 -Starting heartbeat executor: renew interval is: 30
2020-07-12 12:15:44.190 INFO [main]com.netflix.discovery.InstanceInfoReplicator.<init>:60 -InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-12 12:15:44.206 INFO [main]com.netflix.discovery.DiscoveryClient.<init>:449 -Discovery Client initialized at timestamp 1594527344206 with initial instances count: 3
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/userinfo.do]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.userinfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/sendMessage.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.sendMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/addRecord.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.addRecord(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/userLogin.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.userLogin(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/modpassword.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.modpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/yzmLogin.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.modpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/wjpassword.do]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.wjpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/checkTel.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.checkTel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/looktelyzm.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.looktelyzm(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/getPicCheckCode.do],methods=[GET]}" onto public void com.gcx.control.InformationController.getPicCheckCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/order/{id}],methods=[GET]}" onto public java.lang.String com.gcx.control.ordercontrol.order(long,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/hello/{name}]}" onto public java.lang.String com.gcx.control.ordercontrol.index(java.lang.String)
2020-07-12 12:15:45.750 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/getPicCheckCode]}" onto public void com.gcx.control.ordercontrol.getPicCheckCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:15:45.766 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-07-12 12:15:45.766 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-07-12 12:15:45.766 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-07-12 12:15:45.766 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-07-12 12:15:45.766 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:15:46.109 INFO [main]o.s.boot.actuate.endpoint.web.EndpointLinksResolver.<init>:59 -Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-12 12:15:46.140 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-07-12 12:15:46.140 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-07-12 12:15:46.156 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:15:46.671 INFO [main]s.d.s.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods:69 -Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-12 12:15:47.014 WARN [main]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 12:15:47.014 INFO [main]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 12:15:47.264 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:15:48.041 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache:574 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@614aeccc: startup date [Sun Jul 12 12:15:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@435fb7b5
2020-07-12 12:15:48.213 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:15:48.213 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:15:48.571 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-07-12 12:15:48.571 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-07-12 12:15:48.571 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-07-12 12:15:48.571 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache:83 -Clear EntityHelper entityTableMap cache.
2020-07-12 12:15:51.347 INFO [main]o.s.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized:65 -Starting filter initializer
2020-07-12 12:15:51.737 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated:433 -Registering beans for JMX exposure on startup
2020-07-12 12:15:51.753 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'dataSource' has been autodetected for JMX exposure
2020-07-12 12:15:51.768 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-07-12 12:15:51.768 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-07-12 12:15:51.784 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-07-12 12:15:51.784 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-07-12 12:15:51.815 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-07-12 12:15:51.831 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=614aeccc,type=ConfigurationPropertiesRebinder]
2020-07-12 12:15:51.862 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:668 -Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-07-12 12:15:51.878 INFO [main]o.s.context.support.DefaultLifecycleProcessor.start:351 -Starting beans in phase 0
2020-07-12 12:15:51.878 INFO [main]o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.register:42 -Registering application consumer-server with eureka with status UP
2020-07-12 12:15:51.878 INFO [main]com.netflix.discovery.DiscoveryClient.notify:1299 -Saw local status change event StatusChangeEvent [timestamp=1594527351878, current=UP, previous=STARTING]
2020-07-12 12:15:51.878 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:826 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900: registering service...
2020-07-12 12:15:51.893 INFO [main]o.s.context.support.DefaultLifecycleProcessor.start:351 -Starting beans in phase 2147483647
2020-07-12 12:15:51.893 INFO [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:160 -Context refreshed
2020-07-12 12:15:51.940 INFO [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:163 -Found 1 custom documentation plugin(s)
2020-07-12 12:15:51.956 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:835 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900 - registration status: 204
2020-07-12 12:15:52.049 INFO [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:41 -Scanning for api listing references
2020-07-12 12:15:52.330 INFO [main]s.d.s.w.readers.operation.CachingOperationNameGenerator.startingWith:40 -Generating unique operation named: modpasswordUsingGET_1
2020-07-12 12:15:52.392 INFO [main]s.d.s.w.readers.operation.CachingOperationNameGenerator.startingWith:40 -Generating unique operation named: getPicCheckCodeUsingGET_1
2020-07-12 12:15:52.486 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Starting ProtocolHandler ["http-nio-8900"]
2020-07-12 12:15:52.486 INFO [main]org.apache.tomcat.util.net.NioSelectorPool.log:180 -Using a shared selector for servlet write/read
2020-07-12 12:15:52.533 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:206 -Tomcat started on port(s): 8900 (http) with context path ''
2020-07-12 12:15:52.533 INFO [main]o.s.c.n.e.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:124 -Updating port to 8900
2020-07-12 12:15:52.548 INFO [main]com.gcx.ConsumerServerApplication.logStarted:59 -Started ConsumerServerApplication in 36.566 seconds (JVM running for 45.558)
2020-07-12 12:15:53.391 INFO [RMI TCP Connection(6)-192.168.1.7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-07-12 12:15:53.391 INFO [RMI TCP Connection(6)-192.168.1.7]org.springframework.web.servlet.DispatcherServlet.initServletBean:494 -FrameworkServlet 'dispatcherServlet': initialization started
2020-07-12 12:15:53.391 INFO [RMI TCP Connection(7)-192.168.1.7]com.zaxxer.hikari.HikariDataSource.getConnection:110 -HikariPool-1 - Starting...
2020-07-12 12:15:53.453 INFO [RMI TCP Connection(6)-192.168.1.7]org.springframework.web.servlet.DispatcherServlet.initServletBean:509 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2020-07-12 12:15:54.836 INFO [RMI TCP Connection(7)-192.168.1.7]com.zaxxer.hikari.HikariDataSource.getConnection:123 -HikariPool-1 - Start completed.
2020-07-12 12:15:55.211 INFO [RMI TCP Connection(7)-192.168.1.7]io.lettuce.core.EpollProvider.info:104 -Starting without optional epoll library
2020-07-12 12:15:55.226 INFO [RMI TCP Connection(7)-192.168.1.7]io.lettuce.core.KqueueProvider.info:104 -Starting without optional kqueue library
2020-07-12 12:18:49.630 INFO [http-nio-8900-exec-1]o.s.cloud.netflix.zuul.web.ZuulHandlerMapping.registerHandler:373 -Mapped URL path [/consumer-server/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2020-07-12 12:18:49.631 INFO [http-nio-8900-exec-1]o.s.cloud.netflix.zuul.web.ZuulHandlerMapping.registerHandler:373 -Mapped URL path [/uuzl/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2020-07-12 12:18:49.634 INFO [http-nio-8900-exec-1]o.s.cloud.netflix.zuul.web.ZuulHandlerMapping.registerHandler:373 -Mapped URL path [/producer-server/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2020-07-12 12:22:39.081 WARN [HikariPool-1 housekeeper]com.zaxxer.hikari.pool.HikariPool.run:758 -HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m2s302ms705µs366ns).
2020-07-12 12:22:39.088 INFO [AsyncResolver-bootstrap-executor-0]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:23:40.926 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@56aedf73}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 12:23:40 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@614aeccc
2020-07-12 12:23:41.052 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@56aedf73}]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:23:41.479 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@56aedf73}]com.netflix.config.ChainedDynamicProperty.checkAndFlip:115 -Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-12 12:23:41.525 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@56aedf73}]com.netflix.util.concurrent.ShutdownEnabledTimer.<init>:58 -Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2020-07-12 12:23:41.534 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@56aedf73}]com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig:192 -Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-12 12:23:41.546 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@56aedf73}]com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature:222 -Using serverListUpdater PollingServerListUpdater
2020-07-12 12:23:41.556 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@56aedf73}]com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit:150 -DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7f7ca509
2020-07-12 12:24:07.227 INFO [Thread-80]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.doClose:993 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@614aeccc: startup date [Sun Jul 12 12:15:20 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@435fb7b5
2020-07-12 12:24:07.230 INFO [Thread-96]com.netflix.loadbalancer.PollingServerListUpdater.run:53 -Shutting down the Executor Pool for PollingServerListUpdater
2020-07-12 12:24:07.234 INFO [Thread-80]o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.deregister:65 -Unregistering application consumer-server with eureka with status DOWN
2020-07-12 12:24:07.235 WARN [Thread-80]com.netflix.discovery.DiscoveryClient.notify:1297 -Saw local status change event StatusChangeEvent [timestamp=1594527847235, current=DOWN, previous=UP]
2020-07-12 12:24:07.239 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:826 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900: registering service...
2020-07-12 12:24:07.249 INFO [Thread-80]o.s.context.support.DefaultLifecycleProcessor.stop:366 -Stopping beans in phase 2147483647
2020-07-12 12:24:07.251 INFO [Thread-80]o.s.context.support.DefaultLifecycleProcessor.stop:366 -Stopping beans in phase 0
2020-07-12 12:24:07.252 INFO [Thread-80]o.s.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed:77 -Stopping filter initializer
2020-07-12 12:24:07.271 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:835 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900 - registration status: 204
2020-07-12 12:24:07.275 INFO [Thread-80]o.s.jmx.export.annotation.AnnotationMBeanExporter.destroy:451 -Unregistering JMX-exposed beans on shutdown
2020-07-12 12:24:07.276 INFO [Thread-80]o.s.jmx.export.annotation.AnnotationMBeanExporter.unregisterBeans:183 -Unregistering JMX-exposed beans
2020-07-12 12:24:07.433 INFO [Thread-80]o.s.c.annotation.AnnotationConfigApplicationContext.doClose:993 -Closing FeignContext-producer-server: startup date [Sun Jul 12 12:15:41 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@614aeccc
2020-07-12 12:24:08.673 INFO [Thread-80]com.netflix.discovery.DiscoveryClient.shutdown:888 -Shutting down DiscoveryClient ...
2020-07-12 12:24:11.676 INFO [Thread-80]com.netflix.discovery.DiscoveryClient.unregister:922 -Unregistering ...
2020-07-12 12:24:11.696 INFO [Thread-80]com.netflix.discovery.DiscoveryClient.unregister:924 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900 - deregister  status: 200
2020-07-12 12:24:11.736 INFO [Thread-80]com.netflix.discovery.DiscoveryClient.shutdown:911 -Completed shut down of DiscoveryClient
2020-07-12 12:24:12.740 INFO [Thread-80]o.s.c.annotation.AnnotationConfigApplicationContext.doClose:993 -Closing SpringClientFactory-localhost: startup date [Sun Jul 12 12:23:40 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@614aeccc
2020-07-12 12:24:12.744 WARN [Thread-80]o.s.c.annotation.AnnotationConfigApplicationContext.doClose:1003 -Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:288)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:258)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:406)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1000)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2020-07-12 12:24:12.746 INFO [Thread-80]com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:67 -Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
2020-07-12 12:24:12.747 INFO [Thread-80]com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:72 -Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2020-07-12 12:24:12.765 INFO [Thread-80]com.zaxxer.hikari.HikariDataSource.close:381 -HikariPool-1 - Shutdown initiated...
2020-07-12 12:24:12.786 INFO [Thread-80]com.zaxxer.hikari.HikariDataSource.close:383 -HikariPool-1 - Shutdown completed.
2020-07-12 12:30:16.902 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@178213b: startup date [Sun Jul 12 12:30:16 CST 2020]; root of context hierarchy
2020-07-12 12:30:18.215 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:30:18.305 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bf5db65f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:30:19.694 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:663 -The following profiles are active: dev
2020-07-12 12:30:19.752 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e1792e7: startup date [Sun Jul 12 12:30:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@178213b
2020-07-12 12:30:23.333 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 12:30:23.396 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 12:30:23.803 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 12:30:24.184 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 12:30:24.199 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 12:30:24.508 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 12:30:25.379 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=5c6d9c20-596b-3b8d-ae0c-498b349134ab
2020-07-12 12:30:25.487 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:30:26.144 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a343b362] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:30:26.418 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bf5db65f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:30:27.225 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8900 (http)
2020-07-12 12:30:27.254 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8900"]
2020-07-12 12:30:27.278 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 12:30:27.278 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 12:30:27.288 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 12:30:27.649 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 12:30:27.650 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 7898 ms
2020-07-12 12:30:28.747 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 12:30:28.748 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 12:30:28.772 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@56651b9b
2020-07-12 12:30:34.689 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:175 -no modules loaded
2020-07-12 12:30:34.692 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.index.reindex.ReindexPlugin]
2020-07-12 12:30:34.693 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.join.ParentJoinPlugin]
2020-07-12 12:30:34.693 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.percolator.PercolatorPlugin]
2020-07-12 12:30:34.694 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.script.mustache.MustachePlugin]
2020-07-12 12:30:34.694 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.transport.Netty3Plugin]
2020-07-12 12:30:34.695 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.transport.Netty4Plugin]
2020-07-12 12:30:36.235 INFO [localhost-startStop-1]io.netty.util.internal.PlatformDependent.info:104 -Your platform does not provide complete low-level API for accessing direct buffers reliably. Unless explicitly requested, heap buffer will always be preferred to avoid potential system instability.
2020-07-12 12:30:40.921 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-07-12 12:30:40.922 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'tracingFilter' to: [/*]
2020-07-12 12:30:40.923 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'exceptionLoggingFilter' to: [/*]
2020-07-12 12:30:40.923 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-07-12 12:30:40.923 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-07-12 12:30:40.923 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'requestContextFilter' to: [/*]
2020-07-12 12:30:40.924 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'httpTraceFilter' to: [/*]
2020-07-12 12:30:40.924 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-07-12 12:30:40.924 INFO [localhost-startStop-1]o.s.boot.web.servlet.ServletRegistrationBean.addRegistration:186 -Servlet dispatcherServlet mapped to [/]
2020-07-12 12:30:40.927 INFO [localhost-startStop-1]o.s.boot.web.servlet.ServletRegistrationBean.addRegistration:186 -Servlet zuulServlet mapped to [/zuul/*]
2020-07-12 12:30:43.960 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing FeignContext-producer-server: startup date [Sun Jul 12 12:30:43 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e1792e7
2020-07-12 12:30:44.017 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:30:45.038 INFO [main]o.s.cloud.netflix.eureka.InstanceInfoFactory.create:71 -Setting initial instance status as: STARTING
2020-07-12 12:30:45.122 INFO [main]com.netflix.discovery.DiscoveryClient.<init>:349 -Initializing Eureka in region us-east-1
2020-07-12 12:30:45.867 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70 -Using JSON encoding codec LegacyJacksonJson
2020-07-12 12:30:45.868 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71 -Using JSON decoding codec LegacyJacksonJson
2020-07-12 12:30:46.277 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80 -Using XML encoding codec XStreamXml
2020-07-12 12:30:46.277 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81 -Using XML decoding codec XStreamXml
2020-07-12 12:30:46.944 INFO [main]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:30:47.148 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:958 -Disable delta property : false
2020-07-12 12:30:47.148 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:959 -Single vip registry refresh property : null
2020-07-12 12:30:47.149 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:960 -Force full registry fetch : false
2020-07-12 12:30:47.149 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:961 -Application is null : false
2020-07-12 12:30:47.149 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:962 -Registered Applications size is zero : true
2020-07-12 12:30:47.150 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:964 -Application version is -1: true
2020-07-12 12:30:47.150 INFO [main]com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1047 -Getting all instance registry info from the eureka server
2020-07-12 12:30:47.619 INFO [main]com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1056 -The response status is 200
2020-07-12 12:30:47.625 INFO [main]com.netflix.discovery.DiscoveryClient.initScheduledTasks:1264 -Starting heartbeat executor: renew interval is: 30
2020-07-12 12:30:47.630 INFO [main]com.netflix.discovery.InstanceInfoReplicator.<init>:60 -InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-12 12:30:47.638 INFO [main]com.netflix.discovery.DiscoveryClient.<init>:449 -Discovery Client initialized at timestamp 1594528247636 with initial instances count: 2
2020-07-12 12:30:49.353 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/userinfo.do]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.userinfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:30:49.355 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/sendMessage.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.sendMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:30:49.356 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/addRecord.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.addRecord(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:30:49.358 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/userLogin.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.userLogin(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:30:49.359 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/modpassword.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.modpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:30:49.360 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/yzmLogin.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.modpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
2020-07-12 12:30:49.362 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/wjpassword.do]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.wjpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:30:49.362 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/checkTel.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.checkTel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:30:49.363 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/looktelyzm.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.looktelyzm(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
2020-07-12 12:30:49.364 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/getPicCheckCode.do],methods=[GET]}" onto public void com.gcx.control.InformationController.getPicCheckCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:30:49.366 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/order/{id}],methods=[GET]}" onto public java.lang.String com.gcx.control.ordercontrol.order(long,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:30:49.367 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/hello/{name}]}" onto public java.lang.String com.gcx.control.ordercontrol.index(java.lang.String)
2020-07-12 12:30:49.368 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/getPicCheckCode]}" onto public void com.gcx.control.ordercontrol.getPicCheckCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:30:49.375 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-07-12 12:30:49.377 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-07-12 12:30:49.380 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-07-12 12:30:49.386 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-07-12 12:30:49.387 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:30:49.778 INFO [main]o.s.boot.actuate.endpoint.web.EndpointLinksResolver.<init>:59 -Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-12 12:30:49.811 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-07-12 12:30:49.814 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-07-12 12:30:49.816 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:30:50.459 INFO [main]s.d.s.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods:69 -Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-12 12:30:50.812 WARN [main]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 12:30:50.813 INFO [main]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 12:30:51.053 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:30:51.687 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache:574 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e1792e7: startup date [Sun Jul 12 12:30:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@178213b
2020-07-12 12:30:51.916 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:30:51.916 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:30:52.341 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-07-12 12:30:52.343 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-07-12 12:30:52.345 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-07-12 12:30:52.346 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache:83 -Clear EntityHelper entityTableMap cache.
2020-07-12 12:30:55.908 INFO [main]o.s.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized:65 -Starting filter initializer
2020-07-12 12:30:56.286 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated:433 -Registering beans for JMX exposure on startup
2020-07-12 12:30:56.290 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'dataSource' has been autodetected for JMX exposure
2020-07-12 12:30:56.316 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-07-12 12:30:56.320 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-07-12 12:30:56.322 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-07-12 12:30:56.333 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-07-12 12:30:56.355 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-07-12 12:30:56.383 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2e1792e7,type=ConfigurationPropertiesRebinder]
2020-07-12 12:30:56.405 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:668 -Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-07-12 12:30:56.427 INFO [main]o.s.context.support.DefaultLifecycleProcessor.start:351 -Starting beans in phase 0
2020-07-12 12:30:56.428 INFO [main]o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.register:42 -Registering application consumer-server with eureka with status UP
2020-07-12 12:30:56.430 INFO [main]com.netflix.discovery.DiscoveryClient.notify:1299 -Saw local status change event StatusChangeEvent [timestamp=1594528256430, current=UP, previous=STARTING]
2020-07-12 12:30:56.433 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:826 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900: registering service...
2020-07-12 12:30:56.441 INFO [main]o.s.context.support.DefaultLifecycleProcessor.start:351 -Starting beans in phase 2147483647
2020-07-12 12:30:56.442 INFO [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:160 -Context refreshed
2020-07-12 12:30:56.499 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:835 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900 - registration status: 204
2020-07-12 12:30:56.500 INFO [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:163 -Found 1 custom documentation plugin(s)
2020-07-12 12:30:56.605 INFO [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:41 -Scanning for api listing references
2020-07-12 12:30:56.975 INFO [main]s.d.s.w.readers.operation.CachingOperationNameGenerator.startingWith:40 -Generating unique operation named: modpasswordUsingGET_1
2020-07-12 12:30:57.060 INFO [main]s.d.s.w.readers.operation.CachingOperationNameGenerator.startingWith:40 -Generating unique operation named: getPicCheckCodeUsingGET_1
2020-07-12 12:30:57.155 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Starting ProtocolHandler ["http-nio-8900"]
2020-07-12 12:30:57.157 INFO [main]org.apache.tomcat.util.net.NioSelectorPool.log:180 -Using a shared selector for servlet write/read
2020-07-12 12:30:57.199 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:206 -Tomcat started on port(s): 8900 (http) with context path ''
2020-07-12 12:30:57.201 INFO [main]o.s.c.n.e.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:124 -Updating port to 8900
2020-07-12 12:30:57.206 INFO [main]com.gcx.ConsumerServerApplication.logStarted:59 -Started ConsumerServerApplication in 51.108 seconds (JVM running for 58.652)
2020-07-12 12:30:57.806 INFO [RMI TCP Connection(18)-192.168.1.7]com.zaxxer.hikari.HikariDataSource.getConnection:110 -HikariPool-1 - Starting...
2020-07-12 12:30:57.823 INFO [RMI TCP Connection(17)-192.168.1.7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-07-12 12:30:57.824 INFO [RMI TCP Connection(17)-192.168.1.7]org.springframework.web.servlet.DispatcherServlet.initServletBean:494 -FrameworkServlet 'dispatcherServlet': initialization started
2020-07-12 12:30:57.888 INFO [RMI TCP Connection(17)-192.168.1.7]org.springframework.web.servlet.DispatcherServlet.initServletBean:509 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2020-07-12 12:30:58.776 INFO [RMI TCP Connection(18)-192.168.1.7]com.zaxxer.hikari.HikariDataSource.getConnection:123 -HikariPool-1 - Start completed.
2020-07-12 12:30:59.176 INFO [RMI TCP Connection(18)-192.168.1.7]io.lettuce.core.EpollProvider.info:104 -Starting without optional epoll library
2020-07-12 12:30:59.180 INFO [RMI TCP Connection(18)-192.168.1.7]io.lettuce.core.KqueueProvider.info:104 -Starting without optional kqueue library
2020-07-12 12:31:15.921 INFO [http-nio-8900-exec-3]o.s.cloud.netflix.zuul.web.ZuulHandlerMapping.registerHandler:373 -Mapped URL path [/consumer-server/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2020-07-12 12:31:15.921 INFO [http-nio-8900-exec-3]o.s.cloud.netflix.zuul.web.ZuulHandlerMapping.registerHandler:373 -Mapped URL path [/uuzl/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2020-07-12 12:31:15.922 INFO [http-nio-8900-exec-3]o.s.cloud.netflix.zuul.web.ZuulHandlerMapping.registerHandler:373 -Mapped URL path [/producer-server/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2020-07-12 12:33:19.795 WARN [HikariPool-1 housekeeper]com.zaxxer.hikari.pool.HikariPool.run:758 -HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m12s310ms766µs554ns).
2020-07-12 12:33:20.830 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@a6189c4}]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-localhost: startup date [Sun Jul 12 12:33:20 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e1792e7
2020-07-12 12:33:20.961 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@a6189c4}]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:33:21.441 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@a6189c4}]com.netflix.config.ChainedDynamicProperty.checkAndFlip:115 -Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-12 12:33:21.488 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@a6189c4}]com.netflix.util.concurrent.ShutdownEnabledTimer.<init>:58 -Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2020-07-12 12:33:21.498 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@a6189c4}]com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig:192 -Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-12 12:33:21.513 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@a6189c4}]com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature:222 -Using serverListUpdater PollingServerListUpdater
2020-07-12 12:33:21.526 INFO [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@a6189c4}]com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit:150 -DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6dbcab90
2020-07-12 12:35:35.111 INFO [http-nio-8900-exec-2]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing SpringClientFactory-consumer-server: startup date [Sun Jul 12 12:35:35 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e1792e7
2020-07-12 12:35:35.178 INFO [http-nio-8900-exec-2]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:35:35.220 INFO [http-nio-8900-exec-2]com.netflix.config.ChainedDynamicProperty.checkAndFlip:115 -Flipping property: consumer-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-12 12:35:35.223 INFO [http-nio-8900-exec-2]com.netflix.util.concurrent.ShutdownEnabledTimer.<init>:58 -Shutdown hook installed for: NFLoadBalancer-PingTimer-consumer-server
2020-07-12 12:35:35.224 INFO [http-nio-8900-exec-2]com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig:192 -Client: consumer-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-12 12:35:35.228 INFO [http-nio-8900-exec-2]com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature:222 -Using serverListUpdater PollingServerListUpdater
2020-07-12 12:35:35.253 INFO [http-nio-8900-exec-2]com.netflix.config.ChainedDynamicProperty.checkAndFlip:115 -Flipping property: consumer-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-12 12:35:35.257 INFO [http-nio-8900-exec-2]com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit:150 -DynamicServerListLoadBalancer for client consumer-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-server,current list of Servers=[MS-UFIYVLDHDZMG:8900],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MS-UFIYVLDHDZMG:8900;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@63746287
2020-07-12 12:35:49.577 INFO [AsyncResolver-bootstrap-executor-0]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:35:50.011 INFO [PollingServerListUpdater-1]com.netflix.config.ChainedDynamicProperty.checkAndFlip:115 -Flipping property: consumer-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-12 12:35:53.373 WARN [http-nio-8900-exec-4]o.s.cloud.netflix.zuul.filters.post.SendErrorFilter.run:78 -Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: null
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:118)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 71 common frames omitted
Caused by: java.lang.RuntimeException: java.net.SocketTimeoutException: Read timed out
	at rx.exceptions.Exceptions.propagate(Exceptions.java:57)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	... 133 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:282)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:165)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at brave.httpclient.TracingMainExec.execute(TracingMainExec.java:50)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at brave.httpclient.TracingProtocolExec.execute(TracingProtocolExec.java:41)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RibbonLoadBalancingHttpClient.execute(RibbonLoadBalancingHttpClient.java:81)
	at org.springframework.cloud.netflix.ribbon.apache.RibbonLoadBalancingHttpClient.execute(RibbonLoadBalancingHttpClient.java:44)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	... 135 common frames omitted
2020-07-12 12:35:53.384 WARN [http-nio-8900-exec-2]o.s.cloud.netflix.zuul.filters.post.SendErrorFilter.run:78 -Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: consumer-server timed-out and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:819)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:804)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1$1.run(AbstractCommand.java:1154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:45)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:41)
	at org.springframework.cloud.sleuth.instrument.async.TraceCallable.call(TraceCallable.java:63)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run(HystrixContextRunnable.java:61)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1.tick(AbstractCommand.java:1159)
	at com.netflix.hystrix.util.HystrixTimer$1.run(HystrixTimer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	... 1 common frames omitted
Caused by: java.util.concurrent.TimeoutException: null
	at com.netflix.hystrix.AbstractCommand.handleTimeoutViaFallback(AbstractCommand.java:997)
	at com.netflix.hystrix.AbstractCommand.access$500(AbstractCommand.java:60)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:610)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:601)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	... 17 common frames omitted
2020-07-12 12:37:08.829 INFO [Thread-91]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.doClose:993 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e1792e7: startup date [Sun Jul 12 12:30:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@178213b
2020-07-12 12:37:08.831 INFO [Thread-91]o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.deregister:65 -Unregistering application consumer-server with eureka with status DOWN
2020-07-12 12:37:08.831 WARN [Thread-91]com.netflix.discovery.DiscoveryClient.notify:1297 -Saw local status change event StatusChangeEvent [timestamp=1594528628831, current=DOWN, previous=UP]
2020-07-12 12:37:08.836 INFO [Thread-91]o.s.context.support.DefaultLifecycleProcessor.stop:366 -Stopping beans in phase 2147483647
2020-07-12 12:37:08.838 INFO [Thread-91]o.s.context.support.DefaultLifecycleProcessor.stop:366 -Stopping beans in phase 0
2020-07-12 12:37:08.839 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:826 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900: registering service...
2020-07-12 12:37:08.840 INFO [Thread-107]com.netflix.loadbalancer.PollingServerListUpdater.run:53 -Shutting down the Executor Pool for PollingServerListUpdater
2020-07-12 12:37:08.844 INFO [Thread-91]o.s.cloud.netflix.zuul.ZuulFilterInitializer.contextDestroyed:77 -Stopping filter initializer
2020-07-12 12:37:08.850 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:835 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900 - registration status: 204
2020-07-12 12:37:08.855 INFO [Thread-91]o.s.jmx.export.annotation.AnnotationMBeanExporter.destroy:451 -Unregistering JMX-exposed beans on shutdown
2020-07-12 12:37:08.856 INFO [Thread-91]o.s.jmx.export.annotation.AnnotationMBeanExporter.unregisterBeans:183 -Unregistering JMX-exposed beans
2020-07-12 12:37:08.872 INFO [Thread-91]o.s.c.annotation.AnnotationConfigApplicationContext.doClose:993 -Closing FeignContext-producer-server: startup date [Sun Jul 12 12:30:43 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e1792e7
2020-07-12 12:37:12.084 INFO [Thread-91]com.netflix.discovery.DiscoveryClient.shutdown:888 -Shutting down DiscoveryClient ...
2020-07-12 12:38:17.650 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2fc0cc3: startup date [Sun Jul 12 12:38:17 CST 2020]; root of context hierarchy
2020-07-12 12:38:18.045 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:38:18.125 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b62b702d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:38:19.010 INFO [main]com.gcx.ConsumerServerApplication.logStartupProfileInfo:663 -The following profiles are active: dev
2020-07-12 12:38:19.060 INFO [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.prepareRefresh:590 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cfbeac4: startup date [Sun Jul 12 12:38:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2fc0cc3
2020-07-12 12:38:20.892 WARN [main]tk.mybatis.spring.mapper.ClassPathMapperScanner.doScan:142 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 12:38:20.932 WARN [main]org.mybatis.spring.mapper.ClassPathMapperScanner.warn:44 -No MyBatis mapper was found in '[com.gcx]' package. Please check your configuration.
2020-07-12 12:38:21.318 INFO [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:163 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-07-12 12:38:21.640 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2020-07-12 12:38:21.654 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2020-07-12 12:38:21.907 INFO [main]o.s.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition:824 -Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-07-12 12:38:22.803 INFO [main]org.springframework.cloud.context.scope.GenericScope.setSerializationId:294 -BeanFactory id=5c6d9c20-596b-3b8d-ae0c-498b349134ab
2020-07-12 12:38:22.884 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:38:23.506 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9a116d30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:38:23.758 INFO [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b62b702d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-12 12:38:24.814 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8900 (http)
2020-07-12 12:38:24.838 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Initializing ProtocolHandler ["http-nio-8900"]
2020-07-12 12:38:24.859 INFO [main]org.apache.catalina.core.StandardService.log:180 -Starting service [Tomcat]
2020-07-12 12:38:24.860 INFO [main]org.apache.catalina.core.StandardEngine.log:180 -Starting Servlet Engine: Apache Tomcat/8.5.31
2020-07-12 12:38:24.869 INFO [localhost-startStop-1]org.apache.catalina.core.AprLifecycleListener.log:180 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;.]
2020-07-12 12:38:25.196 INFO [localhost-startStop-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring embedded WebApplicationContext
2020-07-12 12:38:25.196 INFO [localhost-startStop-1]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 6136 ms
2020-07-12 12:38:26.041 WARN [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 12:38:26.042 INFO [localhost-startStop-1]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 12:38:26.061 INFO [localhost-startStop-1]com.netflix.config.DynamicPropertyFactory.getInstance:281 -DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@d89d65f
2020-07-12 12:38:28.910 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:175 -no modules loaded
2020-07-12 12:38:28.913 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.index.reindex.ReindexPlugin]
2020-07-12 12:38:28.914 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.join.ParentJoinPlugin]
2020-07-12 12:38:28.914 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.percolator.PercolatorPlugin]
2020-07-12 12:38:28.915 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.script.mustache.MustachePlugin]
2020-07-12 12:38:28.915 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.transport.Netty3Plugin]
2020-07-12 12:38:28.916 INFO [localhost-startStop-1]org.elasticsearch.plugins.PluginsService.logPluginInfo:178 -loaded plugin [org.elasticsearch.transport.Netty4Plugin]
2020-07-12 12:38:30.680 INFO [localhost-startStop-1]io.netty.util.internal.PlatformDependent.info:104 -Your platform does not provide complete low-level API for accessing direct buffers reliably. Unless explicitly requested, heap buffer will always be preferred to avoid potential system instability.
2020-07-12 12:38:34.427 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-07-12 12:38:34.428 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'tracingFilter' to: [/*]
2020-07-12 12:38:34.429 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'exceptionLoggingFilter' to: [/*]
2020-07-12 12:38:34.429 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-07-12 12:38:34.429 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-07-12 12:38:34.430 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'requestContextFilter' to: [/*]
2020-07-12 12:38:34.430 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'httpTraceFilter' to: [/*]
2020-07-12 12:38:34.430 INFO [localhost-startStop-1]o.s.boot.web.servlet.FilterRegistrationBean.configure:245 -Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-07-12 12:38:34.431 INFO [localhost-startStop-1]o.s.boot.web.servlet.ServletRegistrationBean.addRegistration:186 -Servlet dispatcherServlet mapped to [/]
2020-07-12 12:38:34.434 INFO [localhost-startStop-1]o.s.boot.web.servlet.ServletRegistrationBean.addRegistration:186 -Servlet zuulServlet mapped to [/zuul/*]
2020-07-12 12:38:38.351 INFO [main]o.s.c.annotation.AnnotationConfigApplicationContext.prepareRefresh:590 -Refreshing FeignContext-producer-server: startup date [Sun Jul 12 12:38:38 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cfbeac4
2020-07-12 12:38:38.390 INFO [main]o.s.b.f.annotation.AutowiredAnnotationBeanPostProcessor.<init>:154 -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-07-12 12:38:39.634 INFO [main]o.s.cloud.netflix.eureka.InstanceInfoFactory.create:71 -Setting initial instance status as: STARTING
2020-07-12 12:38:39.755 INFO [main]com.netflix.discovery.DiscoveryClient.<init>:349 -Initializing Eureka in region us-east-1
2020-07-12 12:38:41.987 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70 -Using JSON encoding codec LegacyJacksonJson
2020-07-12 12:38:41.988 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71 -Using JSON decoding codec LegacyJacksonJson
2020-07-12 12:38:42.361 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80 -Using XML encoding codec XStreamXml
2020-07-12 12:38:42.362 INFO [main]com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81 -Using XML decoding codec XStreamXml
2020-07-12 12:38:42.945 INFO [main]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:38:43.054 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:958 -Disable delta property : false
2020-07-12 12:38:43.055 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:959 -Single vip registry refresh property : null
2020-07-12 12:38:43.055 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:960 -Force full registry fetch : false
2020-07-12 12:38:43.056 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:961 -Application is null : false
2020-07-12 12:38:43.056 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:962 -Registered Applications size is zero : true
2020-07-12 12:38:43.056 INFO [main]com.netflix.discovery.DiscoveryClient.fetchRegistry:964 -Application version is -1: true
2020-07-12 12:38:43.057 INFO [main]com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1047 -Getting all instance registry info from the eureka server
2020-07-12 12:38:43.404 INFO [main]com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1056 -The response status is 200
2020-07-12 12:38:43.410 INFO [main]com.netflix.discovery.DiscoveryClient.initScheduledTasks:1264 -Starting heartbeat executor: renew interval is: 30
2020-07-12 12:38:43.416 INFO [main]com.netflix.discovery.InstanceInfoReplicator.<init>:60 -InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-12 12:38:43.424 INFO [main]com.netflix.discovery.DiscoveryClient.<init>:449 -Discovery Client initialized at timestamp 1594528723422 with initial instances count: 1
2020-07-12 12:38:45.103 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/userinfo.do]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.userinfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:38:45.105 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/sendMessage.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.sendMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:38:45.106 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/addRecord.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.addRecord(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:38:45.107 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/userLogin.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.userLogin(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:38:45.108 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/modpassword.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.modpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:38:45.109 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/yzmLogin.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.modpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
2020-07-12 12:38:45.110 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/wjpassword.do]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.wjpassword(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)
2020-07-12 12:38:45.111 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/checkTel.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.checkTel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2020-07-12 12:38:45.112 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/looktelyzm.do],methods=[GET]}" onto public com.gcx.util.MyResult<java.lang.Object> com.gcx.control.InformationController.looktelyzm(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)
2020-07-12 12:38:45.113 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/informationController/getPicCheckCode.do],methods=[GET]}" onto public void com.gcx.control.InformationController.getPicCheckCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:38:45.115 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/order/{id}],methods=[GET]}" onto public java.lang.String com.gcx.control.ordercontrol.order(long,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:38:45.116 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/hello/{name}]}" onto public java.lang.String com.gcx.control.ordercontrol.index(java.lang.String)
2020-07-12 12:38:45.116 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/getPicCheckCode]}" onto public void com.gcx.control.ordercontrol.getPicCheckCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:38:45.123 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2020-07-12 12:38:45.125 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2020-07-12 12:38:45.127 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2020-07-12 12:38:45.132 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-07-12 12:38:45.133 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerMapping.register:547 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:38:45.486 INFO [main]o.s.boot.actuate.endpoint.web.EndpointLinksResolver.<init>:59 -Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-12 12:38:45.529 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-07-12 12:38:45.531 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-07-12 12:38:45.533 INFO [main]o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping.register:547 -Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-07-12 12:38:46.063 INFO [main]s.d.s.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods:69 -Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-07-12 12:38:46.399 WARN [main]com.netflix.config.sources.URLConfigurationSource.<init>:121 -No URLs will be polled as dynamic configuration sources.
2020-07-12 12:38:46.400 INFO [main]com.netflix.config.sources.URLConfigurationSource.<init>:122 -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-12 12:38:46.635 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:38:47.745 INFO [main]o.s.w.s.m.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache:574 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cfbeac4: startup date [Sun Jul 12 12:38:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2fc0cc3
2020-07-12 12:38:47.914 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:38:47.914 INFO [main]o.s.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler:373 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-07-12 12:38:48.192 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-07-12 12:38:48.194 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-07-12 12:38:48.196 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache:60 -Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-07-12 12:38:48.196 INFO [main]tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache:83 -Clear EntityHelper entityTableMap cache.
2020-07-12 12:38:51.142 INFO [main]o.s.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized:65 -Starting filter initializer
2020-07-12 12:38:51.484 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated:433 -Registering beans for JMX exposure on startup
2020-07-12 12:38:51.488 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'dataSource' has been autodetected for JMX exposure
2020-07-12 12:38:51.511 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-07-12 12:38:51.515 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-07-12 12:38:51.517 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.autodetect:895 -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-07-12 12:38:51.528 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-07-12 12:38:51.549 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-07-12 12:38:51.578 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:675 -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2cfbeac4,type=ConfigurationPropertiesRebinder]
2020-07-12 12:38:51.601 INFO [main]o.s.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance:668 -Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-07-12 12:38:51.622 INFO [main]o.s.context.support.DefaultLifecycleProcessor.start:351 -Starting beans in phase 0
2020-07-12 12:38:51.623 INFO [main]o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.register:42 -Registering application consumer-server with eureka with status UP
2020-07-12 12:38:51.624 INFO [main]com.netflix.discovery.DiscoveryClient.notify:1299 -Saw local status change event StatusChangeEvent [timestamp=1594528731624, current=UP, previous=STARTING]
2020-07-12 12:38:51.627 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:826 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900: registering service...
2020-07-12 12:38:51.632 INFO [main]o.s.context.support.DefaultLifecycleProcessor.start:351 -Starting beans in phase 2147483647
2020-07-12 12:38:51.633 INFO [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:160 -Context refreshed
2020-07-12 12:38:51.684 INFO [DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient.register:835 -DiscoveryClient_CONSUMER-SERVER/MS-UFIYVLDHDZMG:consumer-server:8900 - registration status: 204
2020-07-12 12:38:51.691 INFO [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:163 -Found 1 custom documentation plugin(s)
2020-07-12 12:38:51.783 INFO [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:41 -Scanning for api listing references
2020-07-12 12:38:52.059 INFO [main]s.d.s.w.readers.operation.CachingOperationNameGenerator.startingWith:40 -Generating unique operation named: modpasswordUsingGET_1
2020-07-12 12:38:52.125 INFO [main]s.d.s.w.readers.operation.CachingOperationNameGenerator.startingWith:40 -Generating unique operation named: getPicCheckCodeUsingGET_1
2020-07-12 12:38:52.220 INFO [main]org.apache.coyote.http11.Http11NioProtocol.log:180 -Starting ProtocolHandler ["http-nio-8900"]
2020-07-12 12:38:52.222 INFO [main]org.apache.tomcat.util.net.NioSelectorPool.log:180 -Using a shared selector for servlet write/read
2020-07-12 12:38:52.257 INFO [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:206 -Tomcat started on port(s): 8900 (http) with context path ''
2020-07-12 12:38:52.261 INFO [main]o.s.c.n.e.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:124 -Updating port to 8900
2020-07-12 12:38:52.266 INFO [main]com.gcx.ConsumerServerApplication.logStarted:59 -Started ConsumerServerApplication in 36.437 seconds (JVM running for 41.594)
2020-07-12 12:38:52.598 INFO [RMI TCP Connection(5)-192.168.1.7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-07-12 12:38:52.602 INFO [RMI TCP Connection(5)-192.168.1.7]org.springframework.web.servlet.DispatcherServlet.initServletBean:494 -FrameworkServlet 'dispatcherServlet': initialization started
2020-07-12 12:38:52.610 INFO [RMI TCP Connection(3)-192.168.1.7]com.zaxxer.hikari.HikariDataSource.getConnection:110 -HikariPool-1 - Starting...
2020-07-12 12:38:52.665 INFO [RMI TCP Connection(5)-192.168.1.7]org.springframework.web.servlet.DispatcherServlet.initServletBean:509 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2020-07-12 12:38:53.599 INFO [RMI TCP Connection(3)-192.168.1.7]com.zaxxer.hikari.HikariDataSource.getConnection:123 -HikariPool-1 - Start completed.
2020-07-12 12:38:54.370 INFO [RMI TCP Connection(3)-192.168.1.7]io.lettuce.core.EpollProvider.info:104 -Starting without optional epoll library
2020-07-12 12:38:54.375 INFO [RMI TCP Connection(3)-192.168.1.7]io.lettuce.core.KqueueProvider.info:104 -Starting without optional kqueue library
2020-07-12 12:43:43.065 INFO [AsyncResolver-bootstrap-executor-0]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:48:43.072 INFO [AsyncResolver-bootstrap-executor-0]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
2020-07-12 12:53:43.078 INFO [AsyncResolver-bootstrap-executor-0]c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 -Resolving eureka endpoints via configuration
